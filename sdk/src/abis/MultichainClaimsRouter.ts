export default [
  {
    inputs: [
      {
        components: [
          { internalType: "contract Router", name: "router", type: "address" },
          { internalType: "contract RoleStore", name: "roleStore", type: "address" },
          { internalType: "contract DataStore", name: "dataStore", type: "address" },
          { internalType: "contract EventEmitter", name: "eventEmitter", type: "address" },
          { internalType: "contract IOracle", name: "oracle", type: "address" },
          { internalType: "contract OrderVault", name: "orderVault", type: "address" },
          { internalType: "contract IOrderHandler", name: "orderHandler", type: "address" },
          { internalType: "contract ISwapHandler", name: "swapHandler", type: "address" },
          { internalType: "contract IExternalHandler", name: "externalHandler", type: "address" },
          { internalType: "contract MultichainVault", name: "multichainVault", type: "address" },
        ],
        internalType: "struct MultichainRouter.BaseConstructorParams",
        name: "params",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      { internalType: "uint256", name: "adjustedClaimableAmount", type: "uint256" },
      { internalType: "uint256", name: "claimedAmount", type: "uint256" },
    ],
    name: "CollateralAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "currentTimestamp", type: "uint256" },
      { internalType: "uint256", name: "deadline", type: "uint256" },
    ],
    name: "DeadlinePassed",
    type: "error",
  },
  { inputs: [{ internalType: "bytes32", name: "key", type: "bytes32" }], name: "DisabledFeature", type: "error" },
  { inputs: [{ internalType: "address", name: "market", type: "address" }], name: "DisabledMarket", type: "error" },
  {
    inputs: [
      { internalType: "address", name: "market", type: "address" },
      { internalType: "address", name: "token", type: "address" },
    ],
    name: "EmptyAddressInMarketTokenBalanceValidation",
    type: "error",
  },
  { inputs: [], name: "EmptyHoldingAddress", type: "error" },
  { inputs: [], name: "EmptyMarket", type: "error" },
  { inputs: [], name: "EmptyReceiver", type: "error" },
  {
    inputs: [{ internalType: "address", name: "token", type: "address" }],
    name: "EmptyTokenTranferGasLimit",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "requiredRelayFee", type: "uint256" },
      { internalType: "uint256", name: "availableFeeAmount", type: "uint256" },
    ],
    name: "InsufficientRelayFee",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "marketsLength", type: "uint256" },
      { internalType: "uint256", name: "tokensLength", type: "uint256" },
      { internalType: "uint256", name: "timeKeysLength", type: "uint256" },
    ],
    name: "InvalidClaimCollateralInput",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "value", type: "uint256" }],
    name: "InvalidClaimableFactor",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "desChainId", type: "uint256" }],
    name: "InvalidDestinationChainId",
    type: "error",
  },
  {
    inputs: [
      { internalType: "uint256", name: "sendTokensLength", type: "uint256" },
      { internalType: "uint256", name: "sendAmountsLength", type: "uint256" },
    ],
    name: "InvalidExternalCalls",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "market", type: "address" },
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "balance", type: "uint256" },
      { internalType: "uint256", name: "expectedMinBalance", type: "uint256" },
    ],
    name: "InvalidMarketTokenBalance",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "market", type: "address" },
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "balance", type: "uint256" },
      { internalType: "uint256", name: "claimableFundingFeeAmount", type: "uint256" },
    ],
    name: "InvalidMarketTokenBalanceForClaimableFunding",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "market", type: "address" },
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "balance", type: "uint256" },
      { internalType: "uint256", name: "collateralAmount", type: "uint256" },
    ],
    name: "InvalidMarketTokenBalanceForCollateralAmount",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "spender", type: "address" },
      { internalType: "address", name: "expectedSpender", type: "address" },
    ],
    name: "InvalidPermitSpender",
    type: "error",
  },
  {
    inputs: [{ internalType: "uint256", name: "srcChainId", type: "uint256" }],
    name: "InvalidSrcChainId",
    type: "error",
  },
  { inputs: [{ internalType: "bytes32", name: "digest", type: "bytes32" }], name: "InvalidUserDigest", type: "error" },
  {
    inputs: [
      { internalType: "uint256", name: "feeUsd", type: "uint256" },
      { internalType: "uint256", name: "maxFeeUsd", type: "uint256" },
    ],
    name: "MaxRelayFeeSwapForSubaccountExceeded",
    type: "error",
  },
  { inputs: [], name: "NonEmptyExternalCallsForSubaccountOrder", type: "error" },
  { inputs: [], name: "TokenPermitsNotAllowedForMultichain", type: "error" },
  {
    inputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "TokenTransferError",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "feeToken", type: "address" },
      { internalType: "address", name: "expectedFeeToken", type: "address" },
    ],
    name: "UnexpectedRelayFeeToken",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "feeToken", type: "address" },
      { internalType: "address", name: "expectedFeeToken", type: "address" },
    ],
    name: "UnsupportedRelayFeeToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      { indexed: false, internalType: "string", name: "reason", type: "string" },
      { indexed: false, internalType: "bytes", name: "returndata", type: "bytes" },
    ],
    name: "TokenTransferReverted",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              { internalType: "address[]", name: "tokens", type: "address[]" },
              { internalType: "address[]", name: "providers", type: "address[]" },
              { internalType: "bytes[]", name: "data", type: "bytes[]" },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              { internalType: "address[]", name: "sendTokens", type: "address[]" },
              { internalType: "uint256[]", name: "sendAmounts", type: "uint256[]" },
              { internalType: "address[]", name: "externalCallTargets", type: "address[]" },
              { internalType: "bytes[]", name: "externalCallDataList", type: "bytes[]" },
              { internalType: "address[]", name: "refundTokens", type: "address[]" },
              { internalType: "address[]", name: "refundReceivers", type: "address[]" },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "spender", type: "address" },
              { internalType: "uint256", name: "value", type: "uint256" },
              { internalType: "uint256", name: "deadline", type: "uint256" },
              { internalType: "uint8", name: "v", type: "uint8" },
              { internalType: "bytes32", name: "r", type: "bytes32" },
              { internalType: "bytes32", name: "s", type: "bytes32" },
              { internalType: "address", name: "token", type: "address" },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              { internalType: "address", name: "feeToken", type: "address" },
              { internalType: "uint256", name: "feeAmount", type: "uint256" },
              { internalType: "address[]", name: "feeSwapPath", type: "address[]" },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          { internalType: "uint256", name: "userNonce", type: "uint256" },
          { internalType: "uint256", name: "deadline", type: "uint256" },
          { internalType: "bytes", name: "signature", type: "bytes" },
          { internalType: "uint256", name: "desChainId", type: "uint256" },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "srcChainId", type: "uint256" },
      { internalType: "address[]", name: "markets", type: "address[]" },
      { internalType: "address[]", name: "tokens", type: "address[]" },
      { internalType: "address", name: "receiver", type: "address" },
    ],
    name: "claimAffiliateRewards",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              { internalType: "address[]", name: "tokens", type: "address[]" },
              { internalType: "address[]", name: "providers", type: "address[]" },
              { internalType: "bytes[]", name: "data", type: "bytes[]" },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              { internalType: "address[]", name: "sendTokens", type: "address[]" },
              { internalType: "uint256[]", name: "sendAmounts", type: "uint256[]" },
              { internalType: "address[]", name: "externalCallTargets", type: "address[]" },
              { internalType: "bytes[]", name: "externalCallDataList", type: "bytes[]" },
              { internalType: "address[]", name: "refundTokens", type: "address[]" },
              { internalType: "address[]", name: "refundReceivers", type: "address[]" },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "spender", type: "address" },
              { internalType: "uint256", name: "value", type: "uint256" },
              { internalType: "uint256", name: "deadline", type: "uint256" },
              { internalType: "uint8", name: "v", type: "uint8" },
              { internalType: "bytes32", name: "r", type: "bytes32" },
              { internalType: "bytes32", name: "s", type: "bytes32" },
              { internalType: "address", name: "token", type: "address" },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              { internalType: "address", name: "feeToken", type: "address" },
              { internalType: "uint256", name: "feeAmount", type: "uint256" },
              { internalType: "address[]", name: "feeSwapPath", type: "address[]" },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          { internalType: "uint256", name: "userNonce", type: "uint256" },
          { internalType: "uint256", name: "deadline", type: "uint256" },
          { internalType: "bytes", name: "signature", type: "bytes" },
          { internalType: "uint256", name: "desChainId", type: "uint256" },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "srcChainId", type: "uint256" },
      { internalType: "address[]", name: "markets", type: "address[]" },
      { internalType: "address[]", name: "tokens", type: "address[]" },
      { internalType: "uint256[]", name: "timeKeys", type: "uint256[]" },
      { internalType: "address", name: "receiver", type: "address" },
    ],
    name: "claimCollateral",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              { internalType: "address[]", name: "tokens", type: "address[]" },
              { internalType: "address[]", name: "providers", type: "address[]" },
              { internalType: "bytes[]", name: "data", type: "bytes[]" },
            ],
            internalType: "struct OracleUtils.SetPricesParams",
            name: "oracleParams",
            type: "tuple",
          },
          {
            components: [
              { internalType: "address[]", name: "sendTokens", type: "address[]" },
              { internalType: "uint256[]", name: "sendAmounts", type: "uint256[]" },
              { internalType: "address[]", name: "externalCallTargets", type: "address[]" },
              { internalType: "bytes[]", name: "externalCallDataList", type: "bytes[]" },
              { internalType: "address[]", name: "refundTokens", type: "address[]" },
              { internalType: "address[]", name: "refundReceivers", type: "address[]" },
            ],
            internalType: "struct IRelayUtils.ExternalCalls",
            name: "externalCalls",
            type: "tuple",
          },
          {
            components: [
              { internalType: "address", name: "owner", type: "address" },
              { internalType: "address", name: "spender", type: "address" },
              { internalType: "uint256", name: "value", type: "uint256" },
              { internalType: "uint256", name: "deadline", type: "uint256" },
              { internalType: "uint8", name: "v", type: "uint8" },
              { internalType: "bytes32", name: "r", type: "bytes32" },
              { internalType: "bytes32", name: "s", type: "bytes32" },
              { internalType: "address", name: "token", type: "address" },
            ],
            internalType: "struct IRelayUtils.TokenPermit[]",
            name: "tokenPermits",
            type: "tuple[]",
          },
          {
            components: [
              { internalType: "address", name: "feeToken", type: "address" },
              { internalType: "uint256", name: "feeAmount", type: "uint256" },
              { internalType: "address[]", name: "feeSwapPath", type: "address[]" },
            ],
            internalType: "struct IRelayUtils.FeeParams",
            name: "fee",
            type: "tuple",
          },
          { internalType: "uint256", name: "userNonce", type: "uint256" },
          { internalType: "uint256", name: "deadline", type: "uint256" },
          { internalType: "bytes", name: "signature", type: "bytes" },
          { internalType: "uint256", name: "desChainId", type: "uint256" },
        ],
        internalType: "struct IRelayUtils.RelayParams",
        name: "relayParams",
        type: "tuple",
      },
      { internalType: "address", name: "account", type: "address" },
      { internalType: "uint256", name: "srcChainId", type: "uint256" },
      { internalType: "address[]", name: "markets", type: "address[]" },
      { internalType: "address[]", name: "tokens", type: "address[]" },
      { internalType: "address", name: "receiver", type: "address" },
    ],
    name: "claimFundingFees",
    outputs: [{ internalType: "uint256[]", name: "", type: "uint256[]" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dataStore",
    outputs: [{ internalType: "contract DataStore", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes32", name: "", type: "bytes32" }],
    name: "digests",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eventEmitter",
    outputs: [{ internalType: "contract EventEmitter", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "externalHandler",
    outputs: [{ internalType: "contract IExternalHandler", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes[]", name: "data", type: "bytes[]" }],
    name: "multicall",
    outputs: [{ internalType: "bytes[]", name: "results", type: "bytes[]" }],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "multichainVault",
    outputs: [{ internalType: "contract MultichainVault", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracle",
    outputs: [{ internalType: "contract IOracle", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderHandler",
    outputs: [{ internalType: "contract IOrderHandler", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "orderVault",
    outputs: [{ internalType: "contract OrderVault", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "roleStore",
    outputs: [{ internalType: "contract RoleStore", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [{ internalType: "contract Router", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "sendNativeToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "token", type: "address" },
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "sendTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "receiver", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
    ],
    name: "sendWnt",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapHandler",
    outputs: [{ internalType: "contract ISwapHandler", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
] as const;
