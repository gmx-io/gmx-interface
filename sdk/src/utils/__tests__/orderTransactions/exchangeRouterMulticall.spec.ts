import { beforeAll, describe, expect, it, vi } from "vitest";

import { ARBITRUM } from "configs/chains";
import { getContract } from "configs/contracts";
import { MARKETS } from "configs/markets";
import { getTokenBySymbol, getWrappedToken, NATIVE_TOKEN_ADDRESS } from "configs/tokens";
import { OrderType } from "types/orders";
import { parseValue, USD_DECIMALS } from "utils/numbers";
import {
  buildIncreaseOrderPayload,
  buildUpdateOrderPayload,
  getBatchOrderMulticallPayload,
  IncreasePositionOrderParams,
  UpdateOrderParams,
} from "utils/orderTransactions";

import { MOCK_GAS_PRICE, mockExternalSwap } from "../../../test/mock";

beforeAll(() => {
  vi.spyOn(Math, "random").mockReturnValue(0.5);
});

describe("Exchange Router Multicall", () => {
  const CHAIN_ID = ARBITRUM;
  const RECEIVER = "0x1234567890123456789012345678901234567890";
  const UI_FEE_RECEIVER = "0x0987654321098765432109876543210987654321";
  const EXECUTION_GAS_LIMIT = 1_000_000n;
  const EXECUTION_FEE_AMOUNT = EXECUTION_GAS_LIMIT * MOCK_GAS_PRICE;
  const REFERRAL_CODE = "0xf2742351cc0eca941ff90bf489789ee6169cbeacfdd38eba60012218fac1b7e5";

  const USDC = getTokenBySymbol(CHAIN_ID, "USDC");
  const WETH = getWrappedToken(CHAIN_ID);
  const ETH_MARKET = MARKETS[CHAIN_ID]["0x70d95587d40A2caf56bd97485aB3Eec10Bee6336"];
  const SLIPPAGE = 50; // 0.5%
  const ORDER_VAULT_ADDRESS = getContract(CHAIN_ID, "OrderVault");
  const EXTERNAL_HANDLER_ADDRESS = getContract(CHAIN_ID, "ExternalHandler");

  const commonParams = {
    chainId: CHAIN_ID,
    receiver: RECEIVER,
    uiFeeReceiver: UI_FEE_RECEIVER,
    executionFeeAmount: EXECUTION_FEE_AMOUNT,
    executionGasLimit: EXECUTION_GAS_LIMIT,
    referralCode: REFERRAL_CODE,
    validFromTime: 0n,
    autoCancel: false,
    marketAddress: ETH_MARKET.marketTokenAddress,
    indexTokenAddress: WETH.address,
    isLong: true,
    sizeDeltaUsd: parseValue("1000", USD_DECIMALS)!, // $1000
    sizeDeltaInTokens: parseValue("1", WETH.decimals)!, // 1 ETH
    collateralTokenAddress: WETH.address,
    collateralDeltaAmount: parseValue("1", WETH.decimals)!, // 1 ETH
    swapPath: [ETH_MARKET.marketTokenAddress],
    orderType: OrderType.MarketIncrease as const,
    allowedSlippage: SLIPPAGE,
    acceptablePrice: parseValue("1200", USD_DECIMALS)!, // $1200 base price
    triggerPrice: 0n,
    externalSwapQuote: undefined,
  } satisfies Partial<IncreasePositionOrderParams>;

  describe("getBatchOrderMulticallPayload", () => {
    it("Token transfers with native only payment", () => {
      const params = {
        ...commonParams,
        payTokenAddress: NATIVE_TOKEN_ADDRESS,
        payTokenAmount: parseValue("1", WETH.decimals)!, // 1 ETH
      };

      const createOrderPayload = buildIncreaseOrderPayload(params);
      const batchParams = {
        createOrderParams: [createOrderPayload],
        updateOrderParams: [],
        cancelOrderParams: [],
      };

      const result = getBatchOrderMulticallPayload({ params: batchParams });

      expect(result.multicall).toEqual([
        {
          method: "sendWnt",
          params: [ORDER_VAULT_ADDRESS, EXECUTION_FEE_AMOUNT + parseValue("1", WETH.decimals)!],
        },
        {
          method: "createOrder",
          params: [createOrderPayload.orderPayload],
        },
      ]);

      expect(result.value).toBe(EXECUTION_FEE_AMOUNT + parseValue("1", WETH.decimals)!);
      expect(result.encodedMulticall).toMatchInlineSnapshot(`
        [
          "0x7d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d50000000000000000000000000000000000000000000000000de111a6b7de4000",
          "0xf59c48eb00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000314dc6448d9338c15b0a000000000000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448d9c199600000000000000000000000000000000000000000000000000000005af3107af2742351cc0eca941ff90bf489789ee6169cbeacfdd38eba60012218fac1b7e50000000000000000000000000000000000000000000000000000000000000320000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098765432109876543210987654321098765432100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee633600000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee63360000000000000000000000000000000000000000000000000000000000000000",
        ]
      `);

      expect(result.callData).toMatchInlineSnapshot(
        `"0xac9650d800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000447d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d50000000000000000000000000000000000000000000000000de111a6b7de4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000364f59c48eb00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000314dc6448d9338c15b0a000000000000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448d9c199600000000000000000000000000000000000000000000000000000005af3107af2742351cc0eca941ff90bf489789ee6169cbeacfdd38eba60012218fac1b7e50000000000000000000000000000000000000000000000000000000000000320000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098765432109876543210987654321098765432100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee633600000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee6336000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"`
      );
    });

    it("Token transfers with sendWnt + sendTokens", () => {
      const params = {
        ...commonParams,
        payTokenAddress: USDC.address,
        payTokenAmount: parseValue("1000", USDC.decimals)!, // 1000 USDC
      };

      const createOrderPayload = buildIncreaseOrderPayload(params);
      const batchParams = {
        createOrderParams: [createOrderPayload],
        updateOrderParams: [],
        cancelOrderParams: [],
      };

      const result = getBatchOrderMulticallPayload({ params: batchParams });

      expect(result.multicall).toEqual([
        {
          method: "sendWnt",
          params: [ORDER_VAULT_ADDRESS, EXECUTION_FEE_AMOUNT],
        },
        {
          method: "sendTokens",
          params: [USDC.address, ORDER_VAULT_ADDRESS, parseValue("1000", USDC.decimals)!],
        },
        {
          method: "createOrder",
          params: [createOrderPayload.orderPayload],
        },
      ]);

      expect(result.value).toBe(EXECUTION_FEE_AMOUNT);
      expect(result.encodedMulticall).toMatchInlineSnapshot(`
        [
          "0x7d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d500000000000000000000000000000000000000000000000000005af3107a4000",
          "0xe6d66ac8000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e583100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d5000000000000000000000000000000000000000000000000000000003b9aca00",
          "0xf59c48eb00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000314dc6448d9338c15b0a00000000000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448d9c199600000000000000000000000000000000000000000000000000000005af3107af2742351cc0eca941ff90bf489789ee6169cbeacfdd38eba60012218fac1b7e50000000000000000000000000000000000000000000000000000000000000320000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098765432109876543210987654321098765432100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee6336000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e583100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee63360000000000000000000000000000000000000000000000000000000000000000",
        ]
      `);
      expect(result.callData).toMatchInlineSnapshot(
        `"0xac9650d800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000000447d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d500000000000000000000000000000000000000000000000000005af3107a4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064e6d66ac8000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e583100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d5000000000000000000000000000000000000000000000000000000003b9aca00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000364f59c48eb00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000314dc6448d9338c15b0a00000000000000000000000000000000000000000000000000000000000000003b9aca000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448d9c199600000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2742351cc0eca941ff90bf489789ee6169cbeacfdd38eba60012218fac1b7e50000000000000000000000000000000000000000000000000000000000000320000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098765432109876543210987654321098765432100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee6336000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e583100000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee6336000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"`
      );
    });

    it("Token transfers with update order top up", () => {
      const ORDER_KEY = "0x1234567890123456789012345678901234567890123456789012345678901234";

      const updateParams = {
        chainId: CHAIN_ID,
        orderKey: ORDER_KEY,
        orderType: OrderType.LimitIncrease,
        sizeDeltaUsd: parseValue("1000", USD_DECIMALS)!,
        triggerPrice: parseValue("1200", USD_DECIMALS)!,
        acceptablePrice: parseValue("1194", USD_DECIMALS)!,
        minOutputAmount: 0n,
        autoCancel: false,
        executionFeeTopUp: EXECUTION_FEE_AMOUNT,
        indexTokenAddress: WETH.address,
        validFromTime: 0n,
      } satisfies Partial<UpdateOrderParams>;

      const updateOrderPayload = buildUpdateOrderPayload(updateParams);
      const batchParams = {
        createOrderParams: [],
        updateOrderParams: [updateOrderPayload],
        cancelOrderParams: [],
      };

      const result = getBatchOrderMulticallPayload({ params: batchParams });

      expect(result.multicall).toEqual([
        {
          method: "sendWnt",
          params: [ORDER_VAULT_ADDRESS, EXECUTION_FEE_AMOUNT],
        },
        {
          method: "updateOrder",
          params: [
            updateOrderPayload.updatePayload.orderKey,
            updateOrderPayload.updatePayload.sizeDeltaUsd,
            updateOrderPayload.updatePayload.acceptablePrice,
            updateOrderPayload.updatePayload.triggerPrice,
            updateOrderPayload.updatePayload.minOutputAmount,
            0n,
            updateOrderPayload.updatePayload.autoCancel,
          ],
        },
      ]);

      expect(result.value).toBe(EXECUTION_FEE_AMOUNT);
      expect(result.encodedMulticall).toMatchInlineSnapshot(`
        [
          "0x7d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d500000000000000000000000000000000000000000000000000005af3107a4000",
          "0xdd5baad21234567890123456789012345678901234567890123456789012345678901234000000000000000000000000000000000000314dc6448d9338c15b0a0000000000000000000000000000000000000000000000000000000000043defc9dca00000000000000000000000000000000000000000000000000000044364c5bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
        ]
      `);
      expect(result.callData).toMatchInlineSnapshot(
        `"0xac9650d800000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000447d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d500000000000000000000000000000000000000000000000000005af3107a40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4dd5baad21234567890123456789012345678901234567890123456789012345678901234000000000000000000000000000000000000314dc6448d9338c15b0a0000000000000000000000000000000000000000000000000000000000043defc9dca00000000000000000000000000000000000000000000000000000044364c5bb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"`
      );
    });

    it("Token transfers with multiple orders, external swaps, update and cancel", () => {
      const params1 = {
        ...commonParams,
        swapPath: [],
        payTokenAddress: NATIVE_TOKEN_ADDRESS,
        payTokenAmount: parseValue("1", WETH.decimals)!, // 1 ETH
        externalSwapQuote: mockExternalSwap({
          inToken: WETH,
          outToken: USDC,
          amountIn: parseValue("1", WETH.decimals)!,
          amountOut: parseValue("1000", USDC.decimals)!,
          priceIn: parseValue("1000", USD_DECIMALS)!, // $1000 per ETH
          priceOut: parseValue("1", USD_DECIMALS)!, // $1 per USDC
        }),
      };

      const params2 = {
        ...commonParams,
        swapPath: [],
        payTokenAddress: USDC.address,
        payTokenAmount: parseValue("1000", USDC.decimals)!, // 1000 USDC
        externalSwapQuote: mockExternalSwap({
          inToken: USDC,
          outToken: WETH,
          amountIn: parseValue("1000", USDC.decimals)!,
          amountOut: parseValue("0.5", WETH.decimals)!,
          priceIn: parseValue("1", USD_DECIMALS)!, // $1 per USDC
          priceOut: parseValue("2000", USD_DECIMALS)!, // $2000 per ETH
        }),
      };

      const ORDER_KEY = "0x1234567890123456789012345678901234567890123456789012345678901234";
      const CANCEL_ORDER_KEY = "0x1234567890123456789012345678901234567890123456789012345678901235";

      const updateParams = {
        chainId: CHAIN_ID,
        orderKey: ORDER_KEY,
        orderType: OrderType.LimitIncrease,
        sizeDeltaUsd: parseValue("1000", USD_DECIMALS)!,
        triggerPrice: parseValue("1200", USD_DECIMALS)!,
        acceptablePrice: parseValue("1194", USD_DECIMALS)!,
        minOutputAmount: 0n,
        autoCancel: false,
        executionFeeTopUp: EXECUTION_FEE_AMOUNT,
        indexTokenAddress: WETH.address,
        validFromTime: 0n,
      } satisfies Partial<UpdateOrderParams>;

      const updateOrderPayload = buildUpdateOrderPayload(updateParams);
      const createOrderPayload1 = buildIncreaseOrderPayload(params1);
      const createOrderPayload2 = buildIncreaseOrderPayload(params2);

      const batchParams = {
        createOrderParams: [createOrderPayload1, createOrderPayload2],
        updateOrderParams: [updateOrderPayload],
        cancelOrderParams: [{ orderKey: CANCEL_ORDER_KEY }],
      };

      const result = getBatchOrderMulticallPayload({ params: batchParams });

      expect(result.multicall).toEqual([
        {
          method: "sendWnt",
          params: [ORDER_VAULT_ADDRESS, EXECUTION_FEE_AMOUNT],
        },
        {
          method: "sendWnt",
          params: [EXTERNAL_HANDLER_ADDRESS, parseValue("1", WETH.decimals)!],
        },
        {
          method: "makeExternalCalls",
          params: [
            ["0x6352a56caadC4F1E25CD6c75970Fa768A3304e64"],
            ["0x1"],
            ["0x82aF49447D8a07e3bd95BD0d56f35241523fBab1", "0xaf88d065e77c8cC2239327C5EDb3A432268e5831"],
            ["0x1234567890123456789012345678901234567890", "0x1234567890123456789012345678901234567890"],
          ],
        },
        {
          method: "createOrder",
          params: [createOrderPayload1.orderPayload],
        },
        {
          method: "sendWnt",
          params: [ORDER_VAULT_ADDRESS, EXECUTION_FEE_AMOUNT],
        },
        {
          method: "sendTokens",
          params: [USDC.address, EXTERNAL_HANDLER_ADDRESS, parseValue("1000", USDC.decimals)!],
        },
        {
          method: "makeExternalCalls",
          params: [
            ["0x6352a56caadC4F1E25CD6c75970Fa768A3304e64"],
            ["0x1"],
            ["0xaf88d065e77c8cC2239327C5EDb3A432268e5831", "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"],
            ["0x1234567890123456789012345678901234567890", "0x1234567890123456789012345678901234567890"],
          ],
        },
        {
          method: "createOrder",
          params: [createOrderPayload2.orderPayload],
        },
        {
          method: "sendWnt",
          params: [ORDER_VAULT_ADDRESS, updateOrderPayload.params.executionFeeTopUp],
        },
        {
          method: "updateOrder",
          params: [
            updateOrderPayload.updatePayload.orderKey,
            updateOrderPayload.updatePayload.sizeDeltaUsd,
            updateOrderPayload.updatePayload.acceptablePrice,
            updateOrderPayload.updatePayload.triggerPrice,
            updateOrderPayload.updatePayload.minOutputAmount,
            0n,
            updateOrderPayload.updatePayload.autoCancel,
          ],
        },
        {
          method: "cancelOrder",
          params: [CANCEL_ORDER_KEY],
        },
      ]);

      expect(result.value).toBe(EXECUTION_FEE_AMOUNT * 3n + parseValue("1", WETH.decimals)!);
      expect(result.encodedMulticall).toMatchInlineSnapshot(`
        [
          "0x7d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d500000000000000000000000000000000000000000000000000005af3107a4000",
          "0x7d39aaf1000000000000000000000000389cef541397e872dc04421f166b5bc2e0b374a50000000000000000000000000000000000000000000000000de0b6b3a7640000",
          "0xd59922b0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e640000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab1000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000000000000000000000000000000000000000000200000000000000000000000012345678901234567890123456789012345678900000000000000000000000001234567890123456789012345678901234567890",
          "0xf59c48eb00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000314dc6448d9338c15b0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448d9c199600000000000000000000000000000000000000000000000000000005af3107af2742351cc0eca941ff90bf489789ee6169cbeacfdd38eba60012218fac1b7e50000000000000000000000000000000000000000000000000000000000000300000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098765432109876543210987654321098765432100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee6336000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e583100000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "0x7d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d500000000000000000000000000000000000000000000000000005af3107a4000",
          "0xe6d66ac8000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e5831000000000000000000000000389cef541397e872dc04421f166b5bc2e0b374a5000000000000000000000000000000000000000000000000000000003b9aca00",
          "0xd59922b0000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000006352a56caadc4f1e25cd6c75970fa768a3304e6400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000af88d065e77c8cc2239327c5edb3a432268e583100000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab1000000000000000000000000000000000000000000000000000000000000000200000000000000000000000012345678901234567890123456789012345678900000000000000000000000001234567890123456789012345678901234567890",
          "0xf59c48eb00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000314dc6448d9338c15b0a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000448d9c199600000000000000000000000000000000000000000000000000000005af3107a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f2742351cc0eca941ff90bf489789ee6169cbeacfdd38eba60012218fac1b7e50000000000000000000000000000000000000000000000000000000000000300000000000000000000000000123456789012345678901234567890123456789000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000098765432109876543210987654321098765432100000000000000000000000070d95587d40a2caf56bd97485ab3eec10bee633600000000000000000000000082af49447d8a07e3bd95bd0d56f35241523fbab100000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "0x7d39aaf100000000000000000000000031ef83a530fde1b38ee9a18093a333d8bbbc40d500000000000000000000000000000000000000000000000000005af3107a4000",
          "0xdd5baad21234567890123456789012345678901234567890123456789012345678901234000000000000000000000000000000000000314dc6448d9338c15b0a0000000000000000000000000000000000000000000000000000000000043defc9dca00000000000000000000000000000000000000000000000000000044364c5bb0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
          "0x7489ec231234567890123456789012345678901234567890123456789012345678901235",
        ]
      `);
      expect(result.callData).toMatchInlineSnapshot(
        `""`
      );
    });
  });
});
